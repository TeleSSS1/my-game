let currentUser = localStorage.getItem("currentUser");
let isAdmin = false;
let lastSpinTime = localStorage.getItem("lastSpinTime");
let isLogin = true;

// –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤ base64 –¥–ª—è "3gh5vd43gyy6"
const ADMIN_PASS_ENCODED = "M2doNXZkNDNneXk2";

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è base64
function decodePass(encoded) {
    return atob(encoded);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ localStorage
function getUsers() {
    return JSON.parse(localStorage.getItem("users")) || {};
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ localStorage
function saveUsers(users) {
    localStorage.setItem("users", JSON.stringify(users));
}

async function showGamesSection() {
    if (!currentUser) {
        alert("–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç!");
        return;
    }
    const users = getUsers();
    const userData = users[currentUser];
    if (!userData || !userData.isVerified) {
        alert("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
        return;
    }
    document.getElementById("mainHeader").style.display = "none";
    document.getElementById("gameGrid").style.display = "grid";
    document.getElementById("gameSectionHeader").style.display = "block";
    document.getElementById("adminButton").style.display = "none";
}

function backToMain() {
    document.getElementById("mainHeader").style.display = "block";
    document.getElementById("gameGrid").style.display = "none";
    document.getElementById("gameSectionHeader").style.display = "none";
    document.getElementById("adminButton").style.display = "block";
}

async function showRoulette() {
    if (!currentUser) {
        alert("–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç!");
        return;
    }
    const users = getUsers();
    const userData = users[currentUser];
    if (!userData || !userData.isVerified) {
        alert("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
        return;
    }
    window.location.href = "games/roulette.html";
}

function backToGames() {
    document.getElementById("gameForm").style.display = "none";
    document.getElementById("gameGrid").style.display = "grid";
    document.getElementById("gameSectionHeader").style.display = "block";
}

function closeGame() {
    document.getElementById("gameForm").style.display = "none";
    document.getElementById("adminButton").style.display = "block";
    backToMain();
}

function checkSpinCooldown() {
    if (lastSpinTime) {
        const now = new Date().getTime();
        const timeDiff = (now - lastSpinTime) / (1000 * 60 * 60);
        if (timeDiff < 6) {
            const remaining = 6 - Math.floor(timeDiff);
            document.getElementById("cooldownText").textContent = `–°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑: ${remaining} —á–∞—Å–æ–≤`;
            document.getElementById("bonusSpinBtn").disabled = true;
            document.getElementById("mainSpinBtn").disabled = true;
        } else {
            document.getElementById("cooldownText").textContent = "–°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑: -";
            document.getElementById("bonusSpinBtn").disabled = false;
        }
    } else {
        document.getElementById("cooldownText").textContent = "–°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑: -";
        document.getElementById("bonusSpinBtn").disabled = false;
    }
}

function spinBonus() {
    const bonusValues = [1, 2, 3, 4, 5];
    const bonus = bonusValues[Math.floor(Math.random() * bonusValues.length)];
    document.getElementById("bonusResult").textContent = `–ë–æ–Ω—É—Å: ${bonus}x`;
    document.getElementById("mainSpinBtn").disabled = false;
}

async function spinMain() {
    const mainValues = [1, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200];
    let result = mainValues[Math.floor(Math.random() * mainValues.length)];
    let emoji = "";
    if (result === 50) emoji = " üêí";
    else if (result === 100) emoji = " üêò";
    else if (result === 200) emoji = " üíµ";
    document.getElementById("spinResult").textContent = `–í—ã–∏–≥—Ä—ã—à: ${result}${emoji}`;
    const bonus = parseInt(document.getElementById("bonusResult").textContent.replace("–ë–æ–Ω—É—Å: ", "").replace("x", ""));
    const totalWin = result * bonus;

    const users = getUsers();
    const userData = users[currentUser] || { balance: 0, points: 0, isVerified: false };
    const newBalance = userData.balance + totalWin;
    users[currentUser].balance = newBalance;
    saveUsers(users);

    updateUserInfo();
    lastSpinTime = new Date().getTime();
    localStorage.setItem("lastSpinTime", lastSpinTime);
    document.getElementById("bonusSpinBtn").disabled = true;
    document.getElementById("mainSpinBtn").disabled = true;
    checkSpinCooldown();
}

function showAuth() {
    document.getElementById("authForm").style.display = "block";
    document.getElementById("formTitle").textContent = "–í—Ö–æ–¥";
    document.getElementById("authButton").textContent = "–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç";
    document.getElementById("toggleButton").textContent = "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è";
    document.getElementById("adminButton").style.display = "none";
    isLogin = true;
}

function closeAuth() {
    document.getElementById("authForm").style.display = "none";
    document.getElementById("username").value = "";
    document.getElementById("password").value = "";
    document.getElementById("adminButton").style.display = "block";
}

function toggleForm() {
    isLogin = !isLogin;
    document.getElementById("formTitle").textContent = isLogin ? "–í—Ö–æ–¥" : "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è";
    document.getElementById("authButton").textContent = isLogin ? "–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç" : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è";
    document.getElementById("toggleButton").textContent = isLogin ? "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è" : "–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç";
}

function logout() {
    currentUser = null;
    localStorage.removeItem("currentUser");
    updateUserInfo();
    closeAuth();
    closeProfile();
    closeGame();
    alert("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞");
}

function handleAccountClick() {
    if (currentUser) {
        showProfile();
    } else {
        showAuth();
    }
}

async function showProfile() {
    const users = getUsers();
    const userData = users[currentUser] || { balance: 0, points: 0, isVerified: false };
    const spins = Math.floor(userData.balance / 10);

    document.getElementById("profileLogin").textContent = "–õ–æ–≥–∏–Ω: " + currentUser;
    document.getElementById("profileBalance").textContent = "–í–∞–ª—é—Ç–∞: " + userData.balance;
    document.getElementById("profilePoints").textContent = "–ü–æ–∏–Ω—Ç—ã: " + userData.points;
    document.getElementById("profileSpins").textContent = "–ü—Ä–æ–∫—Ä—É—Ç—ã: " + spins;
    document.getElementById("profileVerified").innerHTML = userData.isVerified 
        ? "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='verified-icon'>‚úî</span>" 
        : "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='unverified-icon'>‚úñ</span>";
    document.getElementById("profileForm").style.display = "block";
    document.getElementById("adminButton").style.display = "none";
}

function closeProfile() {
    document.getElementById("profileForm").style.display = "none";
    document.getElementById("adminButton").style.display = "block";
}

function showAdminLogin() {
    document.getElementById("adminLoginForm").style.display = "block";
    document.getElementById("adminButton").style.display = "none";
}

function closeAdminLogin() {
    document.getElementById("adminLoginForm").style.display = "none";
    document.getElementById("adminUsername").value = "";
    document.getElementById("adminPassword").value = "";
    document.getElementById("adminButton").style.display = "block";
}

function handleAdminLogin() {
    const username = document.getElementById("adminUsername").value.trim();
    const password = document.getElementById("adminPassword").value.trim();

    if (username === "admin" && password === decodePass(ADMIN_PASS_ENCODED)) {
        isAdmin = true;
        closeAdminLogin();
        showAdminPanel();
    } else {
        alert("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!");
    }
}

async function showAdminPanel() {
    const users = getUsers();
    const playerSelect = document.getElementById("playerSelect");
    playerSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞</option>';

    Object.keys(users).forEach(username => {
        const option = document.createElement("option");
        option.value = username;
        option.textContent = username;
        playerSelect.appendChild(option);
    });

    document.getElementById("playerBalance").textContent = "–í–∞–ª—é—Ç–∞: 0";
    document.getElementById("playerPoints").textContent = "–ü–æ–∏–Ω—Ç—ã: 0";
    document.getElementById("playerVerified").innerHTML = "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='unverified-icon'>‚úñ</span>";
    document.getElementById("newBalance").value = "";
    document.getElementById("newPoints").value = "";
    document.getElementById("adminPanel").style.display = "block";
}

function closeAdminPanel() {
    isAdmin = false;
    document.getElementById("adminPanel").style.display = "none";
    document.getElementById("adminButton").style.display = "block";
}

async function updatePlayerInfo() {
    const selectedUser = document.getElementById("playerSelect").value;
    if (selectedUser) {
        const users = getUsers();
        const userData = users[selectedUser] || { balance: 0, points: 0, isVerified: false };
        document.getElementById("playerBalance").textContent = "–í–∞–ª—é—Ç–∞: " + userData.balance;
        document.getElementById("playerPoints").textContent = "–ü–æ–∏–Ω—Ç—ã: " + userData.points;
        document.getElementById("playerVerified").innerHTML = userData.isVerified 
            ? "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='verified-icon'>‚úî</span>" 
            : "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='unverified-icon'>‚úñ</span>";
    } else {
        document.getElementById("playerBalance").textContent = "–í–∞–ª—é—Ç–∞: 0";
        document.getElementById("playerPoints").textContent = "–ü–æ–∏–Ω—Ç—ã: 0";
        document.getElementById("playerVerified").innerHTML = "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='unverified-icon'>‚úñ</span>";
    }
}

async function updateBalance() {
    const selectedUser = document.getElementById("playerSelect").value;
    const newBalance = parseInt(document.getElementById("newBalance").value);

    if (!selectedUser) {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞!");
        return;
    }
    if (isNaN(newBalance) || newBalance < 0) {
        alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã!");
        return;
    }

    const users = getUsers();
    users[selectedUser].balance = newBalance;
    saveUsers(users);

    document.getElementById("playerBalance").textContent = "–í–∞–ª—é—Ç–∞: " + newBalance;
    document.getElementById("newBalance").value = "";
    if (selectedUser === currentUser) updateUserInfo();
}

async function updatePoints() {
    const selectedUser = document.getElementById("playerSelect").value;
    const newPoints = parseInt(document.getElementById("newPoints").value);

    if (!selectedUser) {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞!");
        return;
    }
    if (isNaN(newPoints) || newPoints < 0) {
        alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∏–Ω—Ç–æ–≤!");
        return;
    }

    const users = getUsers();
    users[selectedUser].points = newPoints;
    saveUsers(users);

    document.getElementById("playerPoints").textContent = "–ü–æ–∏–Ω—Ç—ã: " + newPoints;
    document.getElementById("newPoints").value = "";
    if (selectedUser === currentUser) updateUserInfo();
}

async function verifyPlayer(verify) {
    const selectedUser = document.getElementById("playerSelect").value;
    if (!selectedUser) {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞!");
        return;
    }

    const users = getUsers();
    users[selectedUser].isVerified = verify;
    saveUsers(users);

    document.getElementById("playerVerified").innerHTML = verify 
        ? "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='verified-icon'>‚úî</span>" 
        : "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: <span class='unverified-icon'>‚úñ</span>";
    alert(`–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è ${selectedUser} ${verify ? "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞" : "–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"}!`);
}

async function updateUserInfo() {
    if (currentUser) {
        const users = getUsers();
        const userData = users[currentUser] || { balance: 0, points: 0, isVerified: false };
        document.getElementById("avatar").textContent = "üßë";
        document.getElementById("loginText").textContent = "–õ–æ–≥–∏–Ω: " + currentUser;
        document.getElementById("loginText").classList.remove("blurred");
        document.getElementById("balanceText").textContent = "–ë–∞–ª–∞–Ω—Å: " + userData.balance;
        document.getElementById("balanceText").classList.remove("blurred");
        document.getElementById("pointsText").textContent = "–ü–æ–∏–Ω—Ç—ã: " + userData.points;
        document.getElementById("pointsText").classList.remove("blurred");
        document.getElementById("accountButton").textContent = "–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç";
        document.getElementById("balanceTextSecondary").textContent = "–ë–∞–ª–∞–Ω—Å: " + userData.balance;
        document.getElementById("balanceTextSecondary").classList.remove("blurred");
        document.getElementById("pointsTextSecondary").textContent = "–ü–æ–∏–Ω—Ç—ã: " + userData.points;
        document.getElementById("pointsTextSecondary").classList.remove("blurred");
    } else {
        document.getElementById("avatar").textContent = "üïµÔ∏è";
        document.getElementById("loginText").textContent = "–õ–æ–≥–∏–Ω: [–∑–∞–∫—Ä—ã—Ç–æ]";
        document.getElementById("loginText").classList.add("blurred");
        document.getElementById("balanceText").textContent = "–ë–∞–ª–∞–Ω—Å: [–∑–∞–∫—Ä—ã—Ç–æ]";
        document.getElementById("balanceText").classList.add("blurred");
        document.getElementById("pointsText").textContent = "–ü–æ–∏–Ω—Ç—ã: [–∑–∞–∫—Ä—ã—Ç–æ]";
        document.getElementById("pointsText").classList.add("blurred");
        document.getElementById("accountButton").textContent = "–í—Ö–æ–¥/–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è";
        document.getElementById("balanceTextSecondary").textContent = "–ë–∞–ª–∞–Ω—Å: [–∑–∞–∫—Ä—ã—Ç–æ]";
        document.getElementById("balanceTextSecondary").classList.add("blurred");
        document.getElementById("pointsTextSecondary").textContent = "–ü–æ–∏–Ω—Ç—ã: [–∑–∞–∫—Ä—ã—Ç–æ]";
        document.getElementById("pointsTextSecondary").classList.add("blurred");
    }
}

async function handleAuth() {
    const username = document.getElementById("username").value.trim();
    const password = document.getElementById("password").value;
    if (!username || !password) {
        alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
        return;
    }

    let users = getUsers();

    if (isLogin) {
        if (users[username] && users[username].password === password) {
            console.log("–í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω:", username);
            alert("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω: " + username);
            currentUser = username;
            localStorage.setItem("currentUser", currentUser);
            updateUserInfo();
            closeAuth();
        } else {
            console.log("–í—Ö–æ–¥ –Ω–µ—É—Å–ø–µ—à–µ–Ω:", username);
            alert("–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å!");
        }
    } else {
        if (users[username]) {
            console.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ—É—Å–ø–µ—à–Ω–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", username);
            alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
        } else {
            users[username] = {
                password: password,
                balance: 0,
                points: 0,
                isVerified: false
            };
            saveUsers(users);
            console.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:", username);
            alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: " + username);
            currentUser = username;
            localStorage.setItem("currentUser", currentUser);
            updateUserInfo();
            closeAuth();
        }
    }
}

function showShop() {
    alert("–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ú–∞–≥–∞–∑–∏–Ω—É");
}

updateUserInfo();
checkSpinCooldown();